From 48740906f658e29757eb433d3935b3fb6c353329 Mon Sep 17 00:00:00 2001
From: George Talusan <george.talusan@gmail.com>
Date: Sun, 28 Feb 2016 00:44:04 -0500
Subject: [PATCH 2/2] make SPI flash work with M25P16

---
 apps/snip/sflash/sflash.c                        |  55 +++++++++++
 apps/snip/sflash/sflash.mk                       |   3 +
 libraries/drivers/spi_flash/spi_flash.c          |  26 ++++-
 libraries/drivers/spi_flash/spi_flash.mk         |   5 +-
 libraries/drivers/spi_flash/spi_flash_internal.h |   3 +
 platforms/AMAZONDASH/AMAZONDASH.mk               |   2 +-
 platforms/AMAZONDASH/platform.c                  | 119 ++++++++++-------------
 platforms/AMAZONDASH/platform.h                  |  21 ++--
 8 files changed, 153 insertions(+), 81 deletions(-)
 create mode 100644 apps/snip/sflash/sflash.c
 create mode 100644 apps/snip/sflash/sflash.mk

diff --git a/apps/snip/sflash/sflash.c b/apps/snip/sflash/sflash.c
new file mode 100644
index 0000000..f099f99
--- /dev/null
+++ b/apps/snip/sflash/sflash.c
@@ -0,0 +1,55 @@
+#include <stdlib.h>
+#include "wiced.h"
+#include "spi_flash.h"
+#include "wwd_debug.h"
+
+void application_start()
+{
+	wiced_init();
+
+	sflash_handle_t s = { 0 };
+	if (init_sflash(&s, NULL, SFLASH_WRITE_ALLOWED) == -1) {
+		printf("init_sflash == -1\n");
+		return;
+	}
+
+	if (s.device_id == 0) {
+		printf("couldn't find spi flash\n");
+		return;
+	}
+
+	int success = 0;
+
+	printf("found spi flash device 0x%lx\n", s.device_id);
+
+	unsigned long chip_size = 0;
+	sflash_get_size(&s, &chip_size);
+
+	printf("spi flash has size 0x%lx bytes\n", chip_size);
+
+	printf("about to erase spi flash..\n");
+	success = sflash_chip_erase(&s);
+	printf("sflash_chip_erase == %d\n", success);
+
+	printf("erasing first block of spi flash..\n");
+	success = sflash_sector_erase(&s, 0);
+	printf("sflash_sector_erase == %d\n", success);
+
+	unsigned char *buf = malloc(2048);
+	memset(buf, 0x51, 2048);
+
+	success = sflash_write(&s, 0, buf, 1024);
+	printf("sflash_write == %d\n", success);
+
+	unsigned char *buf2 = malloc(1024);
+	memset(buf2, 0xaa, 1024);
+	success = sflash_read(&s, 0, buf2, 1024);
+	printf("sflash_read == %d\n", success);
+
+	success = memcmp(buf, buf2, 1024);
+	printf("memcmp(buf, buf2) == %d\n", success);
+
+	printf(("that's all folks!\n"));
+
+        deinit_sflash(&s);
+}
diff --git a/apps/snip/sflash/sflash.mk b/apps/snip/sflash/sflash.mk
new file mode 100644
index 0000000..eaa56b7
--- /dev/null
+++ b/apps/snip/sflash/sflash.mk
@@ -0,0 +1,3 @@
+NAME := App_Sflash
+
+$(NAME)_SOURCES := sflash.c
diff --git a/libraries/drivers/spi_flash/spi_flash.c b/libraries/drivers/spi_flash/spi_flash.c
index 4b27bb1..315dc34 100644
--- a/libraries/drivers/spi_flash/spi_flash.c
+++ b/libraries/drivers/spi_flash/spi_flash.c
@@ -74,6 +74,9 @@ int sflash_chip_erase( const sflash_handle_t* const handle )
     {
         return status;
     }
+    if (handle->device_id == SFLASH_ID_M25P16) {
+        return generic_sflash_command( handle, SFLASH_CHIP_ERASE2, 0, NULL, 0, NULL, NULL );
+    }
     return generic_sflash_command( handle, SFLASH_CHIP_ERASE1, 0, NULL, 0, NULL, NULL );
 }
 
@@ -92,7 +95,11 @@ int sflash_sector_erase ( const sflash_handle_t* const handle, unsigned long dev
     {
         return status;
     }
-    retval = generic_sflash_command( handle, SFLASH_SECTOR_ERASE, (unsigned long) 3, device_address_array, 0, NULL, NULL );
+    if (handle->device_id == SFLASH_ID_M25P16) {
+        retval = generic_sflash_command( handle, SFLASH_BLOCK_ERASE_LARGE, (unsigned long) 3, device_address_array, 0, NULL, NULL );
+    } else {
+        retval = generic_sflash_command( handle, SFLASH_SECTOR_ERASE, (unsigned long) 3, device_address_array, 0, NULL, NULL );
+    }
     wiced_assert("error", retval == 0);
     return retval;
 }
@@ -137,7 +144,17 @@ int sflash_get_size( const sflash_handle_t* const handle, /*@out@*/ unsigned lon
     {
         *size = (unsigned long) 0x100000; /* 1MByte */
     }
+    else if ( handle->device_id == SFLASH_ID_SST25VF061B )
+    {
+        *size = (unsigned long) 0x200000; /* 2MByte */
+    }
 #endif /* ifdef SFLASH_SUPPORT_SST_PARTS */
+#ifdef SFLASH_SUPPORT_MICRON_PARTS
+    if ( handle->device_id == SFLASH_ID_M25P16 )
+    {
+        *size = (unsigned long) 0x200000; /* 2MByte */
+    }
+#endif
 #ifdef SFLASH_SUPPORT_EON_PARTS
     if ( handle->device_id == SFLASH_ID_EN25QH16 )
     {
@@ -178,6 +195,13 @@ int sflash_write( const sflash_handle_t* const handle, unsigned long device_addr
         enable_before_every_write = 1;
     }
 #endif /* ifdef SFLASH_SUPPORT_SST_PARTS */
+#ifdef SFLASH_SUPPORT_MICRON_PARTS
+    if ( SFLASH_MANUFACTURER( handle->device_id ) == SFLASH_MANUFACTURER_MICRON )
+    {
+        max_write_size = (unsigned int) 1;
+        enable_before_every_write = 1;
+    }
+#endif /* ifdef SFLASH_SUPPORT_MICRON_PARTS */
 #ifdef SFLASH_SUPPORT_EON_PARTS
     if ( SFLASH_MANUFACTURER( handle->device_id ) == SFLASH_MANUFACTURER_EON )
     {
diff --git a/libraries/drivers/spi_flash/spi_flash.mk b/libraries/drivers/spi_flash/spi_flash.mk
index e64c84c..ebba676 100644
--- a/libraries/drivers/spi_flash/spi_flash.mk
+++ b/libraries/drivers/spi_flash/spi_flash.mk
@@ -14,8 +14,9 @@ $(NAME)_SOURCES := spi_flash.c spi_flash_wiced.c
 
 $(NAME)_DEFINES += SFLASH_SUPPORT_SST_PARTS \
                    SFLASH_SUPPORT_MACRONIX_PARTS \
-                   SFLASH_SUPPORT_EON_PARTS
+                   SFLASH_SUPPORT_EON_PARTS \
+                   SFLASH_SUPPORT_MICRON_PARTS
 
 GLOBAL_INCLUDES := .
 
-$(NAME)_CFLAGS  = $(COMPILER_SPECIFIC_PEDANTIC_CFLAGS)
\ No newline at end of file
+$(NAME)_CFLAGS  = $(COMPILER_SPECIFIC_PEDANTIC_CFLAGS)
diff --git a/libraries/drivers/spi_flash/spi_flash_internal.h b/libraries/drivers/spi_flash/spi_flash_internal.h
index fb667ed..9d0576a 100644
--- a/libraries/drivers/spi_flash/spi_flash_internal.h
+++ b/libraries/drivers/spi_flash/spi_flash_internal.h
@@ -77,15 +77,18 @@ typedef enum
 #define SFLASH_MANUFACTURER_EON        ( (uint8_t) 0x1C )
 #define SFLASH_MANUFACTURER_ISSI_CQ    ( (uint8_t) 0x7F )
 #define SFLASH_MANUFACTURER_ISSI_LP    ( (uint8_t) 0x9D )
+#define SFLASH_MANUFACTURER_MICRON     ( (uint8_t) 0x20 )
 
 #define SFLASH_ID_MX25L8006E           ( (uint32_t) 0xC22014 )
 #define SFLASH_ID_MX25L1606E           ( (uint32_t) 0xC22015 )
 #define SFLASH_ID_MX25L6433F           ( (uint32_t) 0xC22017 )
 #define SFLASH_ID_MX25L25635F          ( (uint32_t) 0xC22019 )
 #define SFLASH_ID_SST25VF080B          ( (uint32_t) 0xBF258E )
+#define SFLASH_ID_SST25VF061B          ( (uint32_t) 0xBF2541 )
 #define SFLASH_ID_EN25QH16             ( (uint32_t) 0x1C3015 )
 #define SFLASH_ID_ISSI25CQ032          ( (uint32_t) 0x7F9D46 )
 #define SFLASH_ID_ISSI25LP064          ( (uint32_t) 0x9D6017 )
+#define SFLASH_ID_M25P16               ( (uint32_t) 0x202015 )
 
 #define SFLASH_ID_DEFAULT              ( (uint32_t) 0x000000 )
 
diff --git a/platforms/AMAZONDASH/AMAZONDASH.mk b/platforms/AMAZONDASH/AMAZONDASH.mk
index 3b2fa01..580a274 100644
--- a/platforms/AMAZONDASH/AMAZONDASH.mk
+++ b/platforms/AMAZONDASH/AMAZONDASH.mk
@@ -12,7 +12,7 @@ ifndef BUS
 BUS := SDIO
 endif
 
-VALID_BUSES := SDIO
+VALID_BUSES := SDIO SPI
 
 EXTRA_TARGET_MAKEFILES +=  $(MAKEFILES_PATH)/standard_platform_targets.mk
 
diff --git a/platforms/AMAZONDASH/platform.c b/platforms/AMAZONDASH/platform.c
index f3c8785..6be9c62 100644
--- a/platforms/AMAZONDASH/platform.c
+++ b/platforms/AMAZONDASH/platform.c
@@ -43,47 +43,50 @@
 
 const platform_gpio_t platform_gpio_pins[] =
 {
-  [WICED_GPIO_0]  = { GPIOB,  0 },
-  [WICED_GPIO_1]  = { GPIOB,  6 }, // RED LED - AMAZON DASH
-  [WICED_GPIO_2]  = { GPIOB,  7 }, // GREEN LED - AMAZON DASH
-  [WICED_GPIO_3]  = { GPIOA,  8 }, // BLUE LED - AMAZON DASH
-  [WICED_GPIO_4]  = { GPIOC,  7 }, // UART6 RX - AMAZON DASH
-  [WICED_GPIO_5]  = { GPIOA,  3 },
-  [WICED_GPIO_6]  = { GPIOA,  4 },
-  [WICED_GPIO_7]  = { GPIOB,  3 },
-  [WICED_GPIO_8]  = { GPIOB,  4 },
-  [WICED_GPIO_9]  = { GPIOB,  5 },
-  [WICED_GPIO_10] = { GPIOB,  8 },
-  [WICED_GPIO_11] = { GPIOA,  1 },
-  [WICED_GPIO_12] = { GPIOC,  2 },
-  [WICED_GPIO_13] = { GPIOB, 14 },
-  [WICED_GPIO_14] = { GPIOC,  6 }, // UART6 TX - AMAZON DASH
-  [WICED_GPIO_16] = { GPIOB,  1 },
-  [WICED_GPIO_18] = { GPIOA, 15 },
-  [WICED_GPIO_19] = { GPIOB, 11 },
-  [WICED_GPIO_20] = { GPIOA, 12 },
-  [WICED_GPIO_21] = { GPIOA, 11 },
-  [WICED_GPIO_22] = { GPIOA,  9 },
-  [WICED_GPIO_23] = { GPIOA, 10 },
-  [WICED_GPIO_28] = { GPIOA, 14 },
-  [WICED_GPIO_29] = { GPIOA,  0 }, // BUTTON - AMAZON DASH Note: This button connected to some PMU chip so it only work when BATT is installed
-  [WICED_GPIO_30] = { GPIOB,  9 },
-  [WICED_GPIO_31] = { GPIOA,  5 },
-  [WICED_GPIO_32] = { GPIOA,  6 },
-  [WICED_GPIO_33] = { GPIOA,  7 },
-  [WICED_GPIO_34] = { GPIOB, 15 },
-  [WICED_GPIO_35] = { GPIOC,  3 },
-  [WICED_GPIO_36] = { GPIOC,  4 },
-
-  //maximus Testing GPIOs
-  [WICED_GPIO_106]  = { GPIOA,  5 },
-  [WICED_GPIO_107]  = { GPIOA,  6 },
-  [WICED_GPIO_108]  = { GPIOA,  7 },
+// from Cottonelle.bin
+  [WICED_GPIO_0] = { GPIOA, 0 }, // button
+  [WICED_GPIO_1] = { GPIOA, 1 },
+  [WICED_GPIO_2] = { GPIOA, 2 },
+  [WICED_GPIO_3] = { GPIOA, 3 },
+  [WICED_GPIO_4] = { GPIOA, 4 }, // spi cs
+  [WICED_GPIO_5] = { GPIOA, 5 }, // spi clk
+  [WICED_GPIO_6] = { GPIOA, 6 }, // spi miso
+  [WICED_GPIO_7] = { GPIOA, 7 }, // spi mosi
+  [WICED_GPIO_8] = { GPIOA, 9 }, // uart1 tx
+  [WICED_GPIO_9] = { GPIOA, 10 }, // uart1 rx
+
+  [WICED_GPIO_10] = { GPIOB , 6 }, // red LED
+  [WICED_GPIO_11] = { GPIOA, 13 },
+  [WICED_GPIO_12] = { GPIOA, 14 },
+  [WICED_GPIO_13] = { GPIOA, 15 },
+
+  [WICED_GPIO_14] = { GPIOB, 4 },
+  [WICED_GPIO_15] = { GPIOB, 8 },
+  [WICED_GPIO_16] = { GPIOB, 9 },
+
+  [WICED_GPIO_17] = { GPIOC, 6 }, // uart6 tx
+  [WICED_GPIO_18] = { GPIOC, 7 }, // uart6 rx
+
+  [WICED_GPIO_19] = { GPIOA, 8 },
+
+  [WICED_GPIO_20] = { GPIOC, 1 },
+
+  [WICED_GPIO_21] = { GPIOB, 14 },
+
+  [WICED_GPIO_22] = { GPIOB, 15 },
+
+  [WICED_GPIO_23] = { GPIOA, 11 },
+//
+
+// from maximus64
+  [WICED_GPIO_24] = { GPIOB, 7 }, // green LED
+  [WICED_GPIO_25] = { GPIOA, 8 }, // blue LED
 };
 
 /* ADC peripherals. Used WICED/platform/MCU/wiced_platform_common.c */
 const platform_adc_t platform_adc_peripherals[] =
 {
+#if 0
     [WICED_ADC_1] = {ADC1, ADC_Channel_3, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_5]},
     [WICED_ADC_2] = {ADC1, ADC_Channel_4, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_6]},
     [WICED_ADC_3] = {ADC1, ADC_Channel_1, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_11]},
@@ -94,36 +97,29 @@ const platform_adc_t platform_adc_peripherals[] =
     [WICED_ADC_8] = {ADC1, ADC_Channel_6, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_32]},
     [WICED_ADC_9] = {ADC1, ADC_Channel_13, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_35]},
     [WICED_ADC_10] = {ADC1, ADC_Channel_14, RCC_APB2Periph_ADC1, 1, &platform_gpio_pins[WICED_GPIO_36]},
+#endif
 };
 
 /* PWM peripherals. Used by WICED/platform/MCU/wiced_platform_common.c */
 const platform_pwm_t platform_pwm_peripherals[] =
 {
-    [WICED_PWM_1]  = {TIM4, 1, RCC_APB1Periph_TIM4, GPIO_AF_TIM4, &platform_gpio_pins[WICED_GPIO_1]},
-    [WICED_PWM_2]  = {TIM4, 2, RCC_APB1Periph_TIM4, GPIO_AF_TIM4, &platform_gpio_pins[WICED_GPIO_2]},
-#if 0
-    [WICED_PWM_3]  = {TIM2, 2, RCC_APB1Periph_TIM2, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_2] }, /* or TIM5/Ch2                       */
-    [WICED_PWM_4]  = {TIM2, 3, RCC_APB1Periph_TIM2, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_3] }, /* or TIM5/Ch3, TIM9/Ch1             */
-    [WICED_PWM_5]  = {TIM2, 4, RCC_APB1Periph_TIM2, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_4] }, /* or TIM5/Ch4, TIM9/Ch2             */
-    [WICED_PWM_6]  = {TIM2, 1, RCC_APB1Periph_TIM2, GPIO_AF_TIM2, &platform_gpio_pins[WICED_GPIO_6] }, /* or TIM2_CH1_ETR, TIM8/Ch1N        */
-    [WICED_PWM_7]  = {TIM3, 1, RCC_APB1Periph_TIM3, GPIO_AF_TIM3, &platform_gpio_pins[WICED_GPIO_7] }, /* or TIM1_BKIN, TIM8_BKIN, TIM13/Ch1*/
-    [WICED_PWM_8]  = {TIM3, 2, RCC_APB1Periph_TIM3, GPIO_AF_TIM3, &platform_gpio_pins[WICED_GPIO_8] }, /* or TIM8/Ch1N, TIM14/Ch1           */
-    [WICED_PWM_9]  = {TIM5, 2, RCC_APB1Periph_TIM5, GPIO_AF_TIM5, &platform_gpio_pins[WICED_GPIO_2] }, /* or TIM2/Ch2                       */
-#endif
+    [WICED_PWM_1]  = {TIM4, 1, RCC_APB1Periph_TIM4, GPIO_AF_TIM4, &platform_gpio_pins[WICED_GPIO_10]},
+    [WICED_PWM_2]  = {TIM4, 2, RCC_APB1Periph_TIM4, GPIO_AF_TIM4, &platform_gpio_pins[WICED_GPIO_24]},
+    [WICED_PWM_3]  = {TIM4, 3, RCC_APB1Periph_TIM4, GPIO_AF_TIM4, &platform_gpio_pins[WICED_GPIO_25]},
 };
 
 /* SPI peripherals */
 const platform_spi_t platform_spi_peripherals[] =
 {
-    [WICED_SPI_1]  =
+    [WICED_SPI_FLASH]  =
     {
         .port                  = SPI1,
         .gpio_af               = GPIO_AF_SPI1,
         .peripheral_clock_reg  = RCC_APB2Periph_SPI1,
         .peripheral_clock_func = RCC_APB2PeriphClockCmd,
-        .pin_mosi              = &platform_gpio_pins[WICED_GPIO_108],
-        .pin_miso              = &platform_gpio_pins[WICED_GPIO_107],
-        .pin_clock             = &platform_gpio_pins[WICED_GPIO_106],
+        .pin_mosi              = &platform_gpio_pins[WICED_SPI_FLASH_MOSI],
+        .pin_miso              = &platform_gpio_pins[WICED_SPI_FLASH_MISO],
+        .pin_clock             = &platform_gpio_pins[WICED_SPI_FLASH_CLK],
         .tx_dma =
         {
             .controller        = DMA2,
@@ -151,8 +147,8 @@ const platform_uart_t platform_uart_peripherals[] =
     [WICED_UART_1] =
     {
         .port               = USART1,
-        .tx_pin             = &platform_gpio_pins[WICED_GPIO_22],
-        .rx_pin             = &platform_gpio_pins[WICED_GPIO_23],
+        .tx_pin             = &platform_gpio_pins[WICED_GPIO_8],
+        .rx_pin             = &platform_gpio_pins[WICED_GPIO_9],
         .cts_pin            = NULL,
         .rts_pin            = NULL,
         .tx_dma_config =
@@ -174,12 +170,11 @@ const platform_uart_t platform_uart_peripherals[] =
             .error_flags    = ( DMA_LISR_TEIF2 | DMA_LISR_FEIF2 | DMA_LISR_DMEIF2 ),
         },
     },
-    //Added UART 6 for Amazon Dash
     [WICED_UART_6] =
     {
         .port               = USART6,
-        .tx_pin             = &platform_gpio_pins[WICED_GPIO_14],
-        .rx_pin             = &platform_gpio_pins[WICED_GPIO_4],
+        .tx_pin             = &platform_gpio_pins[WICED_GPIO_17],
+        .rx_pin             = &platform_gpio_pins[WICED_GPIO_18],
         .cts_pin            = NULL,
         .rts_pin            = NULL,
         .tx_dma_config =
@@ -226,22 +221,13 @@ const platform_i2c_t platform_i2c_peripherals[] =
         .gpio_af                 = GPIO_AF_I2C1
     },
 };
-
-const wiced_spi_device_t wiced_nfc_device =
-{
-    .port        = WICED_SPI_1,
-    .chip_select = WICED_GPIO_5,
-    .speed       = 5000000,
-    .mode        = (SPI_CLOCK_RISING_EDGE | SPI_CLOCK_IDLE_HIGH | SPI_NO_DMA | SPI_MSB_FIRST),
-    .bits        = 8
-};
 #endif
 
 /* SPI flash. Exposed to the applications through include/wiced_platform.h */
 #if defined ( WICED_PLATFORM_INCLUDES_SPI_FLASH )
 const wiced_spi_device_t wiced_spi_flash =
 {
-    .port        = WICED_SPI_1,
+    .port        = WICED_SPI_FLASH,
     .chip_select = WICED_SPI_FLASH_CS,
     .speed       = 5000000,
     .mode        = (SPI_CLOCK_RISING_EDGE | SPI_CLOCK_IDLE_HIGH | SPI_NO_DMA | SPI_MSB_FIRST),
@@ -360,7 +346,6 @@ void platform_init_external_devices( void )
     /* Initialise buttons to input by default */
     platform_gpio_init( &platform_gpio_pins[WICED_BUTTON1], INPUT_HIGH_IMPEDANCE );
 
-
 #ifndef WICED_DISABLE_STDIO
     /* Initialise UART standard I/O */
     platform_stdio_init( &platform_uart_drivers[STDIO_UART], &platform_uart_peripherals[STDIO_UART], &stdio_config );
diff --git a/platforms/AMAZONDASH/platform.h b/platforms/AMAZONDASH/platform.h
index 57a7fe1..039fb38 100644
--- a/platforms/AMAZONDASH/platform.h
+++ b/platforms/AMAZONDASH/platform.h
@@ -60,16 +60,13 @@ typedef enum
     WICED_GPIO_42,
     WICED_GPIO_43,
     WICED_GPIO_44,
-    WICED_GPIO_106,
-    WICED_GPIO_107,
-    WICED_GPIO_108,
     WICED_GPIO_MAX, /* Denotes the total number of GPIO port aliases. Not a valid GPIO alias */
     WICED_GPIO_32BIT = 0x7FFFFFFF,
 } wiced_gpio_t;
 
 typedef enum
 {
-    WICED_SPI_1,
+    WICED_SPI_FLASH,
     WICED_SPI_MAX, /* Denotes the total number of SPI port aliases. Not a valid SPI alias */
     WICED_SPI_32BIT = 0x7FFFFFFF,
 } wiced_spi_t;
@@ -127,20 +124,24 @@ typedef enum
 /* UART port used for standard I/O */
 #define STDIO_UART ( WICED_UART_6 )
 
-//#define WICED_PLATFORM_INCLUDES_SPI_FLASH
-#define WICED_SPI_FLASH_CS ( WICED_GPIO_6 )
+#define WICED_PLATFORM_INCLUDES_SPI_FLASH
 
 /* Components connected to external I/Os */
-#define WICED_LED1         ( WICED_GPIO_1 )
-#define WICED_LED2         ( WICED_GPIO_2 )
-#define WICED_LED3         ( WICED_GPIO_3 )
+#define WICED_LED1         ( WICED_GPIO_10 )
+#define WICED_LED2         ( WICED_GPIO_24 )
+#define WICED_LED3         ( WICED_GPIO_25 )
 
+#define WICED_BUTTON1      ( WICED_GPIO_0 )
 
-#define WICED_BUTTON1      ( WICED_GPIO_29 )
+#define WICED_SPI_FLASH_CS   ( WICED_GPIO_4 )
+#define WICED_SPI_FLASH_CLK  ( WICED_GPIO_5 )
+#define WICED_SPI_FLASH_MISO ( WICED_GPIO_6 )
+#define WICED_SPI_FLASH_MOSI ( WICED_GPIO_7 )
 
 /* I/O connection <-> Peripheral Connections */
 #define WICED_LED1_JOINS_PWM        ( WICED_PWM_1 )
 #define WICED_LED2_JOINS_PWM        ( WICED_PWM_2 )
+#define WICED_LED3_JOINS_PWM        ( WICED_PWM_3 )
 
 /*  Bootloader LED D1 */
 #define BOOTLOADER_LED_GPIO      ( WICED_LED1 )
-- 
2.3.8 (Apple Git-58)

